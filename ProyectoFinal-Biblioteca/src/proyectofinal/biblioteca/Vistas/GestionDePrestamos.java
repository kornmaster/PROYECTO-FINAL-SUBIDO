
package proyectofinal.biblioteca.Vistas;

import bibliotecatpfinal.Entidades.Ejemplares;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import proyectofinal.biblioteca.AccesoADatos.LectoresData;
import proyectofinal.biblioteca.AccesoADatos.LibrosDATA;
import proyectofinal.biblioteca.AccesoADatos.PrestamosDATA;
import proyectofinal.biblioteca.Entidades.Lectores;
import proyectofinal.biblioteca.Entidades.Libro;
import proyectofinal.biblioteca.Entidades.Prestamos;

/**
 *
 * @author Familia
 */
public class GestionDePrestamos extends javax.swing.JInternalFrame {
   

    //parte librosdata//
   
    private LibrosDATA libDATA=new LibrosDATA();
    private Libro libroActual=null;
    
//parte lectores DATA//
    
    private LectoresData lectorData = new LectoresData();// desde este formulario vamos a trabajar con alumnoData por eso creamos la variable y la instanciamos (llamaremos metodos de esta clase)
    private Lectores lectorActual = null; //sera nuestro variable lector y aqui guardaremos el lector que recibiremos al llamar metodos de busqueda,eliminacion, etc
    public GestionDePrestamos() {
        
        initComponents();
        Cancelar();
        Realizarprestamo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtTablaP = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jtEjemplar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jcEstado = new javax.swing.JComboBox<>();
        jdFechai = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jdFechaE = new com.toedter.calendar.JDateChooser();
        jbPrestamo = new javax.swing.JButton();
        jbDevolucion = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jtBuscar = new javax.swing.JTextField();
        jlBuscar = new javax.swing.JLabel();
        jbBuscar = new javax.swing.JButton();
        jrDni = new javax.swing.JRadioButton();
        jrID = new javax.swing.JRadioButton();
        jtDni = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtSocio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtISBN = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jbBuscar1 = new javax.swing.JButton();
        jtTitulo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtTipo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jrEstado = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabla = new javax.swing.JTable();

        jtTablaP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Lector", "Ejemplar", "Inicio", "Fin", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtTablaP);

        jLabel2.setText("Ejemplar");

        jtEjemplar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtEjemplarActionPerformed(evt);
            }
        });

        jLabel3.setText("Estado");

        jcEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "En Prestamo", "Prestamo con retraso", "Activo" }));
        jcEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcEstadoActionPerformed(evt);
            }
        });

        jLabel4.setText("Fecha de Inicio");

        jLabel5.setText("Fecha de entrega");

        jbPrestamo.setText("Realizar prestamo");
        jbPrestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPrestamoActionPerformed(evt);
            }
        });

        jbDevolucion.setText("Cancelar prestamo");
        jbDevolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDevolucionActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");

        jtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtBuscarActionPerformed(evt);
            }
        });

        jlBuscar.setText("Buscar");

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jrDni.setText("DNI");
        jrDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrDniActionPerformed(evt);
            }
        });

        jrID.setSelected(true);
        jrID.setText("ID");
        jrID.setEnabled(false);
        jrID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrIDActionPerformed(evt);
            }
        });

        jtDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDniActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("DNI ");

        jtSocio.setEnabled(false);
        jtSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtSocioActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("ID SOCIO");

        jtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNombreActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("NOMBRE ");

        jtISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtISBNActionPerformed(evt);
            }
        });

        jLabel1.setText("ISBN");

        jbBuscar1.setText("Buscar");
        jbBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscar1ActionPerformed(evt);
            }
        });

        jtTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtTituloActionPerformed(evt);
            }
        });

        jLabel8.setText("Titulo");

        jtTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtTipoActionPerformed(evt);
            }
        });

        jLabel10.setText("Tipo");

        jrEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo", "En Prestamo", "En Prestamo con retraso" }));
        jrEstado.setToolTipText("");
        jrEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrEstadoActionPerformed(evt);
            }
        });

        jLabel11.setText("Estado");

        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idSocio", "nombre", "dni", "domicilio", "email", "estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtSocio, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jlBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrDni))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdFechaE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbDevolucion))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdFechai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbPrestamo))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel10)
                        .addComponent(jLabel8)
                        .addComponent(jLabel11)))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jbBuscar1))
                    .addComponent(jtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(128, 128, 128))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(79, 79, 79)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtEjemplar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(95, 95, 95))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jbSalir)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrDni)
                            .addComponent(jrID))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtSocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbBuscar1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdFechaE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdFechai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtEjemplar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbDevolucion)
                    .addComponent(jbPrestamo))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalir))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbPrestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPrestamoActionPerformed
 Realizarprestamo();
    String nombreLector = jtNombre.getText(); 
    int dniLector = Integer.parseInt(jtDni.getText()); 
    //String mailLector = jtMail.getText(); //
    Ejemplares ejemplar = obtenerEjemplarParaPrestamo(); 
    
     if (ejemplar != null) {
        
        PrestamosDATA prestamosData = new PrestamosDATA();

      
        Lectores lector = prestamosData.buscarLectorPorDNI(dniLector);

        if (lector != null) {
            
            Date fechaInicio = jdFechai.getDate(); 
            Date fechaFin = jdFechaE.getDate(); 

           
            boolean exito = prestamosData.realizarPrestamo(lector, ejemplar, fechaInicio);

            if (exito) {
                JOptionPane.showMessageDialog(this, "Préstamo realizado con éxito.");
            } else {
               
                JOptionPane.showMessageDialog(this, "No se pudo realizar el préstamo. Verifica la disponibilidad del ejemplar.");
            }
        } else {
        
            JOptionPane.showMessageDialog(this, "Lector no encontrado. Verifica el DNI ingresado.");
        }
    } else {
        
        JOptionPane.showMessageDialog(this, "El ejemplar no está disponible para préstamo.");
    }
    }//GEN-LAST:event_jbPrestamoActionPerformed

    private void jtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtBuscarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        //BOTON BUSCAR POR ID
        if (jrID.isSelected()) {
            try {
                Integer id = Integer.parseInt(jtBuscar.getText()); // obtengo y parseo el dni del text field y lo adigno a una variable dni
                lectorActual = lectorData.buscarLectoresId(id);
                if (lectorActual != null) { // si existe el lector entonces
                    jtDni.setText(String.valueOf(lectorActual.getDni()));
                    jtNombre.setText(lectorActual.getNombre());
                    /*jtDomicilio.setText(lectorActual.getDomicilio());
                    jtEmail.setText(lectorActual.getMail());
                    jrEstado.setSelected(lectorActual.isEstado());//setSelected es para setear un booleano y  los booleanos se obtiene con is
                    jtSocio.setText(String.valueOf(lectorActual.getIdSocio()));
                    // activar y desactivar botones,etc
                    jrEstado.setEnabled(true);
                    jtSocio.setEditable(false);
                    jtSocio.setEnabled(false);
                    jbGuardar.setText("Guardar");*/
                }

            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Debe ingresa run ID valido");
            }
        }else if( jrDni.isSelected() ){
            try {
                Integer dni = Integer.parseInt(jtBuscar.getText()); // obtengo y parseo el dni del text field y lo adigno a una variable dni
                lectorActual = lectorData.buscarLectoresDni(dni);
                if (lectorActual != null) { // si existe el lector entonces
                    jtDni.setText(String.valueOf(lectorActual.getDni()));
                    jtSocio.setText(String.valueOf(lectorActual.getIdSocio()));
                    jtNombre.setText(lectorActual.getNombre());
                   /* jtDomicilio.setText(lectorActual.getDomicilio());
                    jtEmail.setText(lectorActual.getMail());
                    jrEstado.setSelected(lectorActual.isEstado());//setSelected es para setear un booleano y  los booleanos se obtiene con is
                    // activar y desactivar botones,etc
                    jrEstado.setEnabled(true);
                    jtSocio.setEditable(false);
                    jtSocio.setEnabled(false);
                    jbGuardar.setText("Guardar");*/
                }

            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Debe ingresar un DNI valido");
            }
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jrDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrDniActionPerformed
        // RADIO BOTON DNI
        jrID.setSelected(false);
        jrID.setEnabled(true);
        jrDni.setEnabled(false);
    }//GEN-LAST:event_jrDniActionPerformed

    private void jrIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrIDActionPerformed
        //RADIO BOTON ID
        jrDni.setSelected(false);
        jrDni.setEnabled(true);
        jrID.setEnabled(false);
    }//GEN-LAST:event_jrIDActionPerformed

    private void jtDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtDniActionPerformed

    private void jtSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtSocioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtSocioActionPerformed

    private void jtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNombreActionPerformed

    private void jtISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtISBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtISBNActionPerformed

    private void jbBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscar1ActionPerformed

        LibrosDATA librosData = new LibrosDATA();
        try {
            String ISBN = jtISBN.getText(); // Obtener el ISBN como una cadena
            List<Libro> librosEncontrados = libDATA.buscarLibrosPorISBN(ISBN);

            if (!librosEncontrados.isEmpty()) {
                // Tomar el primer libro de la lista
                libroActual = librosEncontrados.get(0);

                jtTitulo.setText(libroActual.getTitulo());
                jtTipo.setText(libroActual.getTipo());
               /* jtEditorial.setText(libroActual.getEditorial());
                jtAutor.setText(libroActual.getAutor());
                jtAnio.setText(String.valueOf(libroActual.getAnio()));*/
                jrEstado.setSelectedItem(libroActual.getEstado());

            } else {
                // Si la lista está vacía, no se encontraron libros con ese ISBN
                JOptionPane.showMessageDialog(this, "No se encontraron libros con el ISBN especificado");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Usted debe ingresar un número válido");
        }

    }//GEN-LAST:event_jbBuscar1ActionPerformed

    private void jtTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtTituloActionPerformed

    private void jtTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtTipoActionPerformed

    private void jcEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcEstadoActionPerformed

    private void jrEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrEstadoActionPerformed
       /* String estadoSeleccionado = (String) jrEstado.getSelectedItem();

        /*if (libroActual != null) {
            libroActual.setEstado(estadoSeleccionado);

            if ("Activo".equals(estadoSeleccionado)) {
                // Habilitar el botón de guardar y deshabilitar el de eliminar
                jbGuardar.setEnabled(true);
                jbEliminar.setEnabled(false);
            } else if ("Inactivo".equals(estadoSeleccionado)) {
                // Habilitar el botón de eliminar y deshabilitar el de guardar
                jbGuardar.setEnabled(false);
                jbEliminar.setEnabled(true);
            } else if ("En Prestamo".equals(estadoSeleccionado)) {
                // Habilitar el botón de guardar y deshabilitar el de eliminar
                jbGuardar.setEnabled(true);
                jbEliminar.setEnabled(false);
            } else if ("Prestamo con retraso".equals(estadoSeleccionado)) {
                // Habilitar el botón de guardar y deshabilitar el de eliminar
                jbGuardar.setEnabled(true);
                jbEliminar.setEnabled(false);
            }
            // Otros estados y acciones relacionadas pueden ser manejados de manera similar.
        }

        if (libroActual != null) {
            libroActual.setEstado(estadoSeleccionado);

            // Guardar el cambio en la base de datos
            LibrosDATA librosData = new LibrosDATA();
            librosData.actualizarLibro(libroActual);

            // Actualizar la tabla directamente sin necesidad de volver a cargarla
           DefaultTableModel model = (DefaultTableModel) jTabla.getModel();
            int filaSeleccionada = jTabla.getSelectedRow();

            // Actualiza la fila seleccionada en la tabla
           if (filaSeleccionada != -1) {
                model.setValueAt(estadoSeleccionado, filaSeleccionada, 7);
                /*if (libroActual != null) {
                    libroActual.setEstado(estadoSeleccionado);

                    // Guardar el cambio en la base de datos
                    LibrosDATA librosData = new LibrosDATA();
                    librosData.actualizarLibro(libroActual);

                    // Recargar la tabla según el estado seleccionado
                    if ("Activo".equals(estadoSeleccionado) || "En Prestamo".equals(estadoSeleccionado)) {
                        cargarLibrosEnTabla(true);
                    } else if ("Inactivo".equals(estadoSeleccionado) || "Prestamo con retraso".equals(estadoSeleccionado)) {
                        cargarLibrosEnTabla(false);
                    }
                }*/

    }//GEN-LAST:event_jrEstadoActionPerformed

    private void jtEjemplarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtEjemplarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtEjemplarActionPerformed

    private void jbDevolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDevolucionActionPerformed
                     Cancelar();        // TODO add your handling code here:
    }//GEN-LAST:event_jbDevolucionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTable jTabla;
    public javax.swing.JButton jbBuscar;
    public javax.swing.JButton jbBuscar1;
    private javax.swing.JButton jbDevolucion;
    private javax.swing.JButton jbPrestamo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<String> jcEstado;
    private com.toedter.calendar.JDateChooser jdFechaE;
    private com.toedter.calendar.JDateChooser jdFechai;
    private javax.swing.JLabel jlBuscar;
    private javax.swing.JRadioButton jrDni;
    private javax.swing.JComboBox<String> jrEstado;
    private javax.swing.JRadioButton jrID;
    private javax.swing.JTextField jtBuscar;
    private javax.swing.JTextField jtDni;
    private javax.swing.JTextField jtEjemplar;
    public javax.swing.JTextField jtISBN;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTextField jtSocio;
    private javax.swing.JTable jtTablaP;
    public javax.swing.JTextField jtTipo;
    public javax.swing.JTextField jtTitulo;
    // End of variables declaration//GEN-END:variables

    private Ejemplares obtenerEjemplarParaPrestamo() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void Cancelar(){
        jtNombre.setText("");
        jtDni.setText("");
        
        
    }

    private void Realizarprestamo() {
        jtNombre.setText("");
        jtDni.setText("");
        
        
    }
     /* private void cargarSociosActivos(boolean activos, boolean todos) {// parece que aca usamos list y no ArrayList como abajo

        List<Lectores> lista = lectorData.listarLectores();// nos devuelve una lista con todos los lectores en la BD

       /for (Lectores l : lista) {// recorremos esta lista de lectores
            if (((activos && l.isEstado())  (!activos && !l.isEstado()))  (todos)) {
                modelo.addRow(new Object[]{l.getIdSocio(), l.getNombre(), l.getDni(), l.getDomicilio(), l.getMail(), l.isEstado()});//al modelo de vamos agregando filas
            }

        }*/
    }
    

